plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.325))
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lat, Lon)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "red", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
lo
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
lo
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "red", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "white", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = " ", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = "NULL", edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.05, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = F, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = T, add = TRUE)
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.325))
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = F, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = T, add = TRUE)
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = F, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = T, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = FALSE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = FALSE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.25, edge.arrow.size =.05, vertex.label.cex= 0.25,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
dev.off()
dev.off()
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.325))
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.325))
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.2, 42.325))
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.3, 42.325))
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
lo <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
library(rworldxtra)
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
# eu1
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
# plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
lo <- dat[which(dat$ID %in% x$tip.label),] |>
select(Lon, Lat)
# plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
lox <- dat[which(dat$ID %in% x$tip.label),] |>
select(Lon, Lat)
loy <- dat[which(dat$ID %in% y$tip.label),] |>
select(Lon, Lat)
# na1
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
loy <- dat[which(dat$ID %in% y$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
# eu1
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
# plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
lox <- dat[which(dat$ID %in% x$tip.label),] |>
select(Lon, Lat)
# na1
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
loy <- dat[which(dat$ID %in% y$tip.label),] |>
select(Lon, Lat)
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lo,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
# na1
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
loy <- dat[which(dat$ID %in% y$tip.label),] |>
select(Lon, Lat)
loy <- dat[which(dat$ID %in% y$tip.label),] |>
select(Lon, Lat)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.325))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.325))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
y$tip.label
x$tip.label
x$tip.label
#- setting working directory
setwd("~/git_local/genedis_networks/data/")
#------ loading libraries
library(reshape2)
library(tidyverse)
library(ape)
library(igraph)
library(poppr)
library(TreeTools)
#------
eu1 <- read.csv("eu1_gendists_snpsubset.txt", header = T, sep = " ") |>
as.matrix()
eu1_names = rownames(eu1)
eu1_gd <- matrix(as.numeric(eu1), nrow = dim(eu1)[1])
colnames(eu1) <- rownames(eu1) <- names
eu1[1:4,1:4]
class(eu1)
#------
na1 <- read.csv("na1_gendists_snpsubset.txt", header = T, sep = " ") |>
as.matrix()
na1_names = rownames(na1)
na1_gd <- matrix(as.numeric(na1), nrow = dim(na1)[1])
colnames(na1) <- rownames(na1) <- names
na1[1:4,1:4]
class(na1)
# Minimum Spaning Tree
MSTEdges(eu1, plot = T)
MSTEdges(na1, plot = T)
# ploting distances
par(mfrow = c(2, 1))
hist(eu1[eu1 > 0], xlim = c(0,0.35), breaks = 100)
hist(na1[na1 > 0], xlim = c(0,0.35), breaks = 100)
eq <- function(x) (x*1)
# recalculating distances
eu1_mac_tre <- aboot(as.matrix(eu1), dist = eq ,
sample = 100, showtree = T, tree = "nj")
# recalculating distances
na1_mac_tre <- aboot(as.matrix(na1), dist = eq ,
sample = 100, showtree = T, tree = "nj")
# genetic distance from-to network
eu1_gdnet <- as.data.frame(eu1_mac_tre$edge)
# eu1_mac_tre$tip.label
eu1_gdnet$length <- as.numeric(eu1_mac_tre$edge.length)
colnames(eu1_gdnet) <- c("From", "To", "value")
# genetic distance from-to network
na1_gdnet <- as.data.frame(na1_mac_tre$edge)
na1_gdnet$length <- as.numeric(na1_mac_tre$edge.length)
colnames(na1_gdnet) <- c("From", "To", "value")
par(mfrow=c(2,1))
hist(eu1_gdnet$value, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
hist(na1_gdnet$value, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
#----- Network
x = eu1_gdnet
y = na1_gdnet
GRPHx <- graph_from_data_frame(x, directed = FALSE)
GRPHy <- graph_from_data_frame(y, directed = FALSE)
rbPal <- colorRampPalette(c("grey", "black"))
counPal <- colorRampPalette(c("red", "yellow", "blue", "white", "brown"), bias = 1)
V(GRPHx)$size=5
V(GRPHy)$size=5
# V(GRPH)$xx <- as.numeric(as.factor(V(GRPH))) # make the categories of x into numeric values for color ramp
# V(igraph)$color <- counPal(10)[cut(as.numeric(V(GRPH)$xx),breaks = 10)]
CounColorx <- unique(cbind(V(GRPHx)$Country, V(GRPHx)$color))
CounColory <- unique(cbind(V(GRPHy)$Country, V(GRPHy)$color))
E(GRPHx)$xx <- x$value # make the categories of x into numeric values for color ramp
E(GRPHy)$xx <- y$value # make the categories of x into numeric values for color ramp
# Identify isolated nodes
par(mfrow=c(2,1))
hist(E(GRPHx)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
hist(E(GRPHy)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
# Select conditionals
condx  <- E(GRPHx)[E(GRPHx)$xx >=  0.01]
condy  <- E(GRPHy)[E(GRPHy)$xx >=  0.01]
# Remove edges nodes
GRPHx <- delete.edges(GRPHx, condx)
GRPHy <- delete.edges(GRPHy, condy)
E(GRPHx)$color <- rbPal(10)[cut(as.numeric(E(GRPHx)$xx),breaks = 10)]
E(GRPHy)$color <- rbPal(10)[cut(as.numeric(E(GRPHy)$xx),breaks = 10)]
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
# legend(x= 0.9, y= -0.9, CounColor[,1], pch=21,  col="black", pt.bg=CounColor[,2], pt.cex=2,cex=.8, bty="n", ncol=1)
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
dev.off()
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
# legend(x= 0.9, y= -0.9, CounColor[,1], pch=21,  col="black", pt.bg=CounColor[,2], pt.cex=2,cex=.8, bty="n", ncol=1)
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
dev.off()
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
# legend(x= 0.9, y= -0.9, CounColor[,1], pch=21,  col="black", pt.bg=CounColor[,2], pt.cex=2,cex=.8, bty="n", ncol=1)
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
# loading SOD data
data <- read.csv("hazel_population_data.csv")
data.wgs <- read.csv("hazel_population_data.wgs.csv")
dim(data)
dim(data.wgs)
dat <- data[data$ID %in% data.wgs$ID,]
dat[eu1_gdnet]
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
# eu1
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
lox <- dat[which(dat$ID %in% x$tip.label),] |>
select(Lon, Lat)
# na1
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
lox
x$tip.label
eu1_mac_tre
lox <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
lox
loy <- dat[which(dat$ID %in% na1_mac_tre$tip.label),] |>
select(Lon, Lat)
loy
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
plot(GRPHx, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = lox,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.325))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.1))
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.2))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.0, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.125, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.12, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.1, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.7, -124.3), ylim = c(42.1, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.), ylim = c(42.1, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.1, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.15, 42.175))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.15, 42.155))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.145, 42.155))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.145, 42.150))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.145, 42.148))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.2, 42.4), rescale = FALSE, add = TRUE)
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.145, 42.148))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.145, 42.146))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.142, 42.146))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.14, 42.146))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
## very important to set layout to "lo" (or whatever you named it above), rescale = FALSE, add = TRUE
plot(NorthAmerica, xlim = c(-124.5, -124.1), ylim = c(42.14, 42.144))
plot(GRPHy, vertex.size = 0.5, edge.arrow.size =.05, vertex.label.cex= 0.3,
vertex.label.color = NULL, edge.width = 0.2, edge.curved = TRUE, layout = loy,
xlim = c(-124.45, -124.2), ylim = c(42.1, 42.15), rescale = FALSE, add = TRUE)
#----- Network
x = eu1_gdnet
y = na1_gdnet
GRPHx <- graph_from_data_frame(x, directed = FALSE)
GRPHy <- graph_from_data_frame(y, directed = FALSE)
rbPal <- colorRampPalette(c("grey", "black"))
counPal <- colorRampPalette(c("red", "yellow", "blue", "white", "brown"), bias = 1)
V(GRPHx)$size=5
V(GRPHy)$size=5
# V(GRPH)$xx <- as.numeric(as.factor(V(GRPH))) # make the categories of x into numeric values for color ramp
# V(igraph)$color <- counPal(10)[cut(as.numeric(V(GRPH)$xx),breaks = 10)]
CounColorx <- unique(cbind(V(GRPHx)$Country, V(GRPHx)$color))
CounColory <- unique(cbind(V(GRPHy)$Country, V(GRPHy)$color))
E(GRPHx)$xx <- x$value # make the categories of x into numeric values for color ramp
E(GRPHy)$xx <- y$value # make the categories of x into numeric values for color ramp
# Identify isolated nodes
par(mfrow=c(2,1))
hist(E(GRPHx)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
hist(E(GRPHy)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.01, col="red")
hist(E(GRPHx)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.007, col="red")
hist(E(GRPHy)$xx, breaks= 100, xlim = c(0,0.125))
abline(v=0.007, col="red")
# Select conditionals
condx  <- E(GRPHx)[E(GRPHx)$xx >=  0.007]
condy  <- E(GRPHy)[E(GRPHy)$xx >=  0.007]
# Remove edges nodes
GRPHx <- delete.edges(GRPHx, condx)
GRPHy <- delete.edges(GRPHy, condy)
E(GRPHx)$color <- rbPal(10)[cut(as.numeric(E(GRPHx)$xx),breaks = 10)]
E(GRPHy)$color <- rbPal(10)[cut(as.numeric(E(GRPHy)$xx),breaks = 10)]
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
# legend(x= 0.9, y= -0.9, CounColor[,1], pch=21,  col="black", pt.bg=CounColor[,2], pt.cex=2,cex=.8, bty="n", ncol=1)
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved = F, edge.width=1, layout=layout_with_kk)
dev.off()
dim(data)
dim(data.wgs)
dat <- data[data$ID %in% data.wgs$ID,]
dat[eu1_gdnet]
worldmap <- getMap(resolution = "high") #grab the world map
NorthAmerica <- worldmap[which(worldmap$REGION == "North America"),] # grab north america
# eu1
plot(GRPHx,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
lox <- dat[which(dat$ID %in% eu1_mac_tre$tip.label),] |>
select(Lon, Lat)
# na1
plot(GRPHy,  edge.arrow.size=.05, vertex.label.cex=.3, vertex.label.color='black',
edge.curved=T, edge.width=0.2, layout=layout_with_kk)
loy <- dat[which(dat$ID %in% na1_mac_tre$tip.label),] |>
select(Lon, Lat)
plot(NorthAmerica, xlim = c(-124.5, -124.3), ylim = c(42.31, 42.325))
#- setting working directory
# setwd("~/Box/OSU/P_ramorum/data/")
setwd("~/git_local/genedis_networks/data/")
setwd("~/git_db/genedis_networks/data/")
#------ loading libraries
library(reshape2)
library(tidyverse)
library(ape)
library(igraph)
library(poppr)
# library(TreeTools)
# library(dendextend)
library("treeman")
library(MoreTreeTools)
#------
eu1 <- read.csv("eu1_gendists_snpsubset.txt", header = T, sep = " ") |>
as.matrix()
eu1_names = rownames(eu1)
eu1_gd <- matrix(as.numeric(eu1), nrow = dim(eu1)[1])
colnames(eu1) <- rownames(eu1) <- names
#------
eu1 <- read.csv("eu1_gendists_snpsubset.txt", header = T, sep = " ") |>
as.matrix()
setwd("~/git_db/genedis_networks/data/")
#------
eu1 <- read.csv("eu1_gendists_snpsubset.txt", header = T, sep = " ") |>
as.matrix()
(1959+16+13+117+401)*2)+73.60+4436
((1959+16+13+117+401)*2)+73.60+4436
((1959+16+13+117+401)*2)+73.60+4436
(1959*3)((+16+13+117+401)*2)+73.60+4436
seq <- (1959*3)
otros <- (16+13+117+401)*2
reg <- 73.60+4436
sum(seq, otros, reg)
11480.6-14500
apple <- 2839
sum(seq, otros, reg, apple)
